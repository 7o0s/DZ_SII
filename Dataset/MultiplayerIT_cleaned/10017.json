{"name": "I minigiochi fatteli tu", "ref": "https://multiplayer.it/recensioni/77167-warioware-do-it-yourself-i-minigiochi-fatteli-tu.html", "text": "From the first moments of powering up it's clear that ~Do It Yourself~ was not made for those waiting for a new episode of Wario Ware. It is true that 90 (and more) ready-made micro-games are included in the package, but the first thing you have to do once the title has started is to attend a long and in-depth tutorial that explains how to create your own games. The tutorial, albeit long, is essential for understanding the ~programming~ system, and has been divided into more and more in-depth steps. In WarioWare: Do it Yourself we can have control over any aspect of the micro-game we want to create: the background, the objects, the music, the sound effects, and of course the mechanics. A part of the tutorial has been dedicated to each of these elements that teaches us how to use the drawing tools, how to animate our elements, how to create music (or let it create), and how to set up the ~artificial intelligence~ that governs everything . SW Multiplayer Making (well) each of these things is not an easy undertaking, but the care with which the developers (the Intelligent System of Paper Mario and Advance Wars were also involved in the process, to name two) have created this package is commendable. The tutorial for those who are a little familiar appears clear but going down the track things might seem less natural. It is for this reason that the team has included interactive tutorials where you play while learning; the challenge is to conclude a practically ready software, inserting the instruction that solves the problem of a game that still doesn't work as it should. There are 32 scenarios and each one proposes a different problem and solution, all useful for our experience. Ok, but how do you make this blessed game? We'll try to explain it to you, but we can't guarantee that we can be clear because the undertaking in words is not easy. First let's start by saying that you don't write a line of code, of course. What they have managed to do with DIY is create similarities between programming and the world we live in. The objects are the actors, the background is the scene, the instructions are the script. Then there are the levers which can be on and off, and are nothing more than boolean (true/false) variables. First you create a project and give it a name. Then you can move on to creating the background which can also be imported from the other games already available. In fact everything can be imported, music and sprites (characters) included. The editor, the same for creating the game elements, allows you to create lines, geometric figures, fills and to draw freely with the stylus. You can also create textures (for example to draw a brick wall quickly), the game will explain how to do it, even if it doesn't tell you. For the main elements we have 4 stages available, each with 4 different animations. For example, if you have a man and you want him to walk, create a phase called ~walk~, and draw the frames you need (maximum 4). If you then want to make it fall, create the ~fall~ phase, with what you need. Once you have your items it's time to make them do something. The programming system works with a simple concept: cause and effect. In practice you will sweat a little more, but experience will set you free. The cause can obviously be the touch of the object (or the stage), the collision with something, the end of an animation, and the change of state of a lever. Each item has its own leverage. And each item can check the lever status of the others. If you hit Goofy (typical professional programmer example) and put his switch to ~On~, you can create a lawsuit on Mickey who will then do something. There are 6 kinds of different causes, and the strength is that they can be used together, for example: ~If Goofy's lever is On, if Mickey's phase is - Walk -, and if the game is not won yet, then do something.~ Even ~do something~ can be a sum of things, for example go right, activate the sound effect, put the lever to off, make coffee. This is called AI in the game. Each cause (or causes) and effect pair is an AI, and each object can host up to 5, plus one that activates at the start of the game. WarioWare: DIY Showcase For 800 points you can download the Showcase version of DIY. What does it offer? First of all, 90 more games to play on Wii and download on Nintendo DS. These too, like all the others, can be opened and studied (and are also new resources to import). DS games can be loaded onto the Wii, played on the TV, and sent to the Wall's friends list (instead of perhaps using the game's friends list on the DS). If it is more convenient for you, you can download the released gamesweekly direct to Wii. Among other things, the structure is much more game oriented than the Nintendo DS counterpart (since there is no editor), so it could be an interesting choice even taken alone, if you are curious to get closer to the world of Wario Ware. A bug's life The music editor instead allows you to create your own soundtrack (not the effects, those must be chosen from a predefined set). Those who have had the opportunity to try such products know what to expect. You can choose an instrument among the many available, and place the notes in the score. One thing we couldn't do though is increase the length of a note. If we wish we can ask the ~teacher~ to create us something in the style we want (scary, joyful, calm), or, twist, hum the tune with our mouth closed and see it converted into notes, which ok won't be perfect, but it can be a start point. If, at this point, you think you've got an idea of how to DIY a game, well, think again. The problems that may arise during the development of your idea are only clear once they arise. Ultimately, this is the challenge. There is already a lot to do like this, and you have to find a way to make do with what is there, since in order not to complicate the experience further, the developers have not included the possibility of controlling the dragging of objects (~Drag & drop~). Some solutions will necessarily have to be adapted. As we said before, the package is made with mastery, and each available game can be opened with the editor and examined for ideas, or to import the elements into other projects. Every game, every game, everything. Once you've made your creation, it's time to share it. The sharing system is almost a ~Common Creative~ license: when you put a game online, you give your consent to make it public, free, and modifiable by anyone else. Then there are the themed contests, currently you have to submit a game inspired by Mario. Weekly you can download the best ones selected by Nintendo, or the games of VIPs, i.e. created by real designers, generally close to Nintendo (currently there is a game by Sakurai and one by Sakamoto). And then there are the achievements, a series of medals that are unlocked by creating and using all the features of the software, and then there is", "date": "2010-05-14", "grade": "8.5"}