{"ref": "https://www.gamespot.com/reviews/hack-n-slash-review/1900-6415902/", "date": "October 14, 2014", "game_name": "Hack 'n' Slash", "text": "Cheat codes have slowly found themselves phased almost entirely out of video games. There are several possible reasons for this. Developers who are creating a narrative-based experience may not want you to divert from a very intentional path through the use of cheats. Games which feature multiplayer components blended with their singleplayer campaigns could become unbalanced if someone uses a code. The halcyon days of typing in IDKFA to unlock every weapon in Doom, or turning on Big Head Mode in GoldenEye 007's actual menu of cheats, are long gone.The games today which do support cheats, however, often require you to enter them through some kind of ~developer mode~ or ~debug mode~. For PC games, this is commonly accomplished by pressing the tilde key to type codes directly into a command prompt, or by editing text files within the game's installation directory to change values or unlock new options. The console game equivalent would be akin to using a Game Genie or modded console to edit parts of the game itself, thereby allowing you to start with infinite lives, every item unlocked, or to access parts of the game that you as a player were never meant to see. Hack 'n' Slash is a game that is predicated upon your manipulation of such a developer mode being one of the primary mechanics.From its character designs, dialogue and inventory system, it's clear the game is an homage to The Legend of Zelda. You, a character who looks like Link, must stop an evil wizard, who looks like Ganondorf, from using this developer mode to ruin the world. Hack 'n' Slash also follows the Zelda series' gameplay formula to a T--but instead of acquiring new items to solve puzzles and explore the world with, you unlock new aspects of the game's developer mode to experiment with. You can change the speed of the day/night cycle, make a character forget that they've already given you an extra heart piece, and even see the invisible walls that define the game's traversable boundaries.The protagonist's sword isn't a traditional weapon--it has connectors on the end, like a USB stick. Hitting something with the sword doesn't deal damage. Instead, it plugs you into that object, such as a rock or an enemy creature, and allows you to manipulate its variables--programming-speak for the aspects that define how an in-game object behaves. You can change how much health it has, which characters it will attack, what its movement pattern is, and a host of other values unique to each particular object. It is within this unique context that you spend the first few hours of the game solving puzzles that will be familiar to players of any Zelda game--such as pushing blocks, or finding a way past a character who blocks a passage--but in new, fun ways.After those few hours, you acquire items that allow much deeper access to the game's code than a typical developer mode does. These items allow for what amounts to an in-game method for editing raw text files in the game's installation directory. One puzzle required me to find a way past a prison warden, who would not let me advance because my name was on a wanted list. I had to use an item to find the place in the game's memory where the variable that contained my name was stored, then use another item to change that name, so that when the warden checked that variable, it would make him think I was someone else.Getting to the realisation that such a series of steps was required to solve this puzzle was an exercise in frustration. Hack 'n' Slash lets you manipulate a wide breadth of elements that typically remain behind the scenes, yet the solution for each of these later puzzles is esoteric. I possess basic hobbyist programming knowledge--I know my way around a for loop and a switch statement--but it's not enough to fully understand the idiosyncrasies of Hack 'n' Slash's self-awareness. It's difficult to determine whether you're even on the right track when attempting these puzzles, because the information conveyed in the game's developer mode is completely abstract; even the text is rendered in nonsensical glyphs. You eventually find a Rosetta Stone-like item to convert those glyphs into English, which makes these advanced puzzles slightly easier to follow.However, entirely new kinds of puzzles are then introduced which construct visual representations of the mathematical flow of code and allow you to manipulate its numerical values. My brain is simply not tuned to tackle purely mathematical problems, and the visual manifestations of them aren't clear enough to provide people like me a more familiar starting point. I felt like I was taking a maths exam that I hadn't studied for. In the process of attempting to solve these puzzles, it's actually possible to break the game, from within the game--which is why one of the first items you receive is an orb that resets and reloads the current room.Once you have actually solved these puzzles, it becomes apparent how fiendishly clever Hack 'n' Slash actually is. The game derives a self-referential humour not through dialogue alone, but by gradually pulling back the curtain on the way games actually function. There's a fierce intelligence behind the way in takes the well-trodden Zelda formula and framing the puzzles as cheeky explorations of pure game logic. But the game assumes so much knowledge that, if you're not familiar with making games yourself, you may find each joke is lost on you whilst solving its associated puzzle, and is only funny in retrospect after its completion. Hack 'n' Slash, then, is a game made by game developers, for game developers, featuring humour that only game developers are likely to fully appreciate."}