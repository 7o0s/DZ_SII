{"ref": "https://www.gamespot.com/reviews/rpg-maker-review/1900-2633694/", "date": "May 17, 2006", "game_name": "RPG Maker", "text": "When examining a game like RPG Maker, the limitations of the review process become apparent. As the game offers no gameplay, in the traditional sense, the assigned score was determined by considering the potential quality of its products - that is, the actual RPGs that RPG Maker makes. Granted, it's silly to even begin to consider the myriad of projects all you would-be developers will begin to cook up using RPG Maker's questionable toolset. But when forced to imagine the possible best, images of could've-been RPGs of the Super Famicom era come to mind, give or take some novelty or amusement factor. Having no false expectations as to the limitations of its toolset, though, is of prime import when considering how satisfied you'll be with RPG Maker. Knowing off the bat that your experience with RPG Maker will frequently have you elbow-deep in the most hostile of interfaces - scripting events, penning text, or what have you - will most adequately prepare you for the rigors of RPG making. The RPG Maker package contains three major components: a system editor, a scenario-scripting tool, and a sprite-rendering/animation tool called Anime Maker. The system editor allows you to basically create the objects, creatures, powers, and characters that will inhabit your masterwork. Easily the most intuitive and streamlined tool in the game, the system editor allows you to define the characters' abilities, spells, and items, as well as the attributes of the monsters, towns, and dungeons. Even at its most streamlined, though, RPG Maker loses much of its functionality in its endless layers of lists. Of the system tools, the dungeon editor - which is what you'll use to create basically every environment in the game, from towns and dungeons to outdoor environments - is the most limited and unkind. Consisting of a series of tiles - one set reserved for outdoor settings, the other for indoor - the dungeon editor has you placing map pieces on an invisible grid. The process requires you to work with the objects on a realistic scale, though, preventing you from gaining perspective on what your additions will mean to your dungeon as a whole. A minigrid, perhaps, would have been in order - or anything that would have allowed you to efficiently discern the map-wide implications of your additions. As it stands, only the most simple of dungeons can be created with any degree of efficiency. Of course, one so inclined could unrelentingly chip at this interface and construct something truly complex and intricate, but only a very small fraction of the population, though, will likely be thus inclined. The scenario editor allows you to infuse the shells you've created with the system editor with flat-colored, sprite-based life. Basically a list of commands, the scenario editor puts at your disposal the ability to animate your hopefully intricate yet balanced game system with the elements we've all come to love and appreciate. Anything from verbose color text to brimming treasure boxes can be scripted into existence, as well as everything in between - the scenario editor is what you'll use to trigger the game's ending, execute boss fights, or cue in a cutscene. Each function often has its own submenus, which both logically correspond with the selected action and further complicate the already iffy procedure of scripting events. The Anime Maker - a very simple sprite-editing tool - allows you to create custom art for your budding masterwork and animate it. Since the whole package is mouse compatible, creating functional art is not out of the question, but - as is the case with every one of the game's functions - you're left wondering whether the PlayStation was the ideal medium for it. Of course, any game-design tool with even a smidgen of intuitiveness is a welcome addition to the mass market. But in order to make this apparent movement take off, developers like Success - who seem bent on bringing such games to the market - had better polish up their packages. Even if it does mean sacrificing depth for the sake of functionality. Because, to be honest, what good is a set of tools that frustrates more than it aids creation?"}